{
  "version": 3,
  "sources": [
    "lib/polyfills.js",
    "lib/api-client.js",
    "lib/utils.js",
    "components/canvas/action-items/Redraw.js",
    "components/canvas/action-items/Reset.js",
    "components/canvas/elements/CloseButton.js",
    "components/canvas/action-items/Search.js",
    "components/canvas/action-items/Timeline.js",
    "components/canvas/Canvas.js",
    "components/canvas/menu-items/view.js",
    "components/canvas/menu-items/del.js",
    "components/canvas/menu-items/edit.js",
    "components/canvas/menu-items/add.js",
    "components/app/App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "String",
    "prototype",
    "toProperCase",
    "this",
    "replace",
    "txt",
    "charAt",
    "toUpperCase",
    "substr",
    "toLowerCase",
    "_oldFetch",
    "fetch",
    "window",
    "fetchStart",
    "Event",
    "view",
    "document",
    "bubbles",
    "cancelable",
    "fetchEnd",
    "fetchCall",
    "apply",
    "arguments",
    "dispatchEvent",
    "then",
    "catch",
    "addEventListener",
    "spinner",
    "getElementById",
    "classList",
    "remove",
    "add",
    "cg2cy",
    "data",
    "typeMap",
    "vertex",
    "edge",
    "fieldMap",
    "_id",
    "_from",
    "_to",
    "result",
    "el",
    "key",
    "type",
    "nodes",
    "node",
    "item",
    "k",
    "push",
    "getHeaders",
    "sessionID",
    "show",
    "nids",
    "timestamp",
    "options",
    "a",
    "url",
    "URL",
    "location",
    "origin",
    "search",
    "URLSearchParams",
    "Object",
    "assign",
    "method",
    "body",
    "JSON",
    "stringify",
    "undefined",
    "headers",
    "response",
    "text",
    "parse",
    "list",
    "_rawId",
    "log",
    "nid",
    "init",
    "addChildren",
    "parentID",
    "children",
    "edit",
    "generateSessionID",
    "c",
    "r",
    "Math",
    "random",
    "toString",
    "localStorage",
    "setItem",
    "getObjClass",
    "length",
    "getTableProps",
    "id",
    "objClass",
    "Body",
    "content",
    "entries",
    "map",
    "entry",
    "field",
    "value",
    "removePopper",
    "popperKey",
    "divKey",
    "poppers",
    "destroy",
    "setPopper",
    "popper",
    "canvas",
    "Button",
    "className",
    "color",
    "onClick",
    "cyReset",
    "bind",
    "size",
    "confirm",
    "reset",
    "cy",
    "setElements",
    "CardLink",
    "href",
    "outline",
    "$",
    "jsons",
    "d",
    "Type",
    "Class",
    "columns",
    "dataField",
    "sort",
    "filter",
    "textFilter",
    "selectRow",
    "mode",
    "clickToSelect",
    "bgColor",
    "onSelect",
    "row",
    "$id",
    "renderedPosition",
    "viewportCenterX",
    "width",
    "viewportCenterY",
    "height",
    "relativeRenderedPosition",
    "x",
    "y",
    "zoomFactor",
    "min",
    "animate",
    "panBy",
    "duration",
    "delay",
    "zoom",
    "level",
    "createElement",
    "ReactDOM",
    "render",
    "Card",
    "CardBody",
    "CardTitle",
    "tag",
    "style",
    "minWidth",
    "CloseButton",
    "CardText",
    "bootstrap4",
    "keyField",
    "hover",
    "condensed",
    "filterFactory",
    "getElementsByTagName",
    "appendChild",
    "setAttribute",
    "PopperCore",
    "handler",
    "Timeline",
    "props",
    "items",
    "groups",
    "setTimeout",
    "container",
    "timeline",
    "vis",
    "React",
    "Component",
    "i",
    "title",
    "Date",
    "start",
    "zoomKey",
    "orientation",
    "axis",
    "stack",
    "groupHeightMode",
    "stackSubgroups",
    "Badge",
    "fit",
    "Cytoscape",
    "use",
    "Popper",
    "Cxtmenu",
    "Canvas",
    "state",
    "elements",
    "configurePlugins",
    "setHandlers",
    "getItem",
    "minRadius",
    "cxtMenu",
    "menuRadius",
    "selector",
    "commands",
    "buildMenu",
    "fillColor",
    "activeFillColor",
    "activePadding",
    "indicatorSize",
    "separatorWidth",
    "spotlightPadding",
    "minSpotlightRadius",
    "maxSpotlightRadius",
    "openMenuEvents",
    "itemColor",
    "itemTextShadowColor",
    "atMouse",
    "cxtmenu",
    "menu",
    "outerHTML",
    "select",
    "popperCard",
    "enabled",
    "del",
    "contentStyle",
    "editNode",
    "Form",
    "FormGroup",
    "Label",
    "for",
    "sm",
    "Col",
    "Input",
    "name",
    "defaultValue",
    "required",
    "bsSize",
    "onChange",
    "e",
    "target",
    "outgoers",
    "selected",
    "Set",
    "isSelect",
    "addButton",
    "contains",
    "delete",
    "onSelectAll",
    "rows",
    "clear",
    "selectedData",
    "has",
    "setState",
    "layout",
    "getOptions",
    "run",
    "on",
    "cursor",
    "styleMap",
    "parseFloat",
    "scratch",
    "directed",
    "padding",
    "circle",
    "grid",
    "spacingFactor",
    "avoidOverlap",
    "nodeDimensionsIncludeLabels",
    "maximal",
    "animationDuration",
    "animateFilter",
    "transform",
    "position",
    "Row",
    "Reset",
    "Redraw",
    "Search",
    "stylesheet",
    "CytoscapeComponent",
    "normalizeElements",
    "App",
    "toggle",
    "isOpen",
    "Container",
    "fluid",
    "Navbar",
    "light",
    "expand",
    "NavbarBrand",
    "role",
    "NavbarToggler",
    "Collapse",
    "navbar",
    "Nav",
    "NavItem",
    "NavLink",
    "Boolean",
    "hostname",
    "match",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.a094f544.chunk.js",
  "sourcesContent": [
    "// eslint-disable-next-line no-extend-native\nString.prototype.toProperCase = function() {\n  return this.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\n// Store a copy of the fetch function\nconst _oldFetch = fetch;\n\n// Create our new version of the fetch function\nwindow.fetch = function() {\n  // Create hooks\n  const fetchStart = new Event(\"fetchStart\", {\n    view: document,\n    bubbles: true,\n    cancelable: false\n  });\n  const fetchEnd = new Event(\"fetchEnd\", {\n    view: document,\n    bubbles: true,\n    cancelable: false\n  });\n\n  // Pass the supplied arguments to the real fetch function\n  const fetchCall = _oldFetch.apply(this, arguments);\n\n  // Trigger the fetchStart event\n  document.dispatchEvent(fetchStart);\n\n  fetchCall\n    .then(function() {\n      // Trigger the fetchEnd event\n      document.dispatchEvent(fetchEnd);\n    })\n    .catch(function() {\n      // Trigger the fetchEnd event\n      document.dispatchEvent(fetchEnd);\n    });\n\n  return fetchCall;\n};\n\ndocument.addEventListener(\"fetchStart\", function() {\n  const spinner = document.getElementById(\"loading\");\n  spinner.classList.remove(\"invisible\");\n  spinner.classList.add(\"visible\");\n});\n\ndocument.addEventListener(\"fetchEnd\", function() {\n  const spinner = document.getElementById(\"loading\");\n  spinner.classList.remove(\"visible\");\n  spinner.classList.add(\"invisible\");\n});\n",
    "function cg2cy(data) {\n  const typeMap = {\n    vertex: \"nodes\",\n    edge: \"edges\"\n  };\n  const fieldMap = {\n    _id: \"id\",\n    _from: \"source\",\n    _to: \"target\"\n  };\n\n  const result = {};\n\n  for (let el of data) {\n    const key = typeMap[el.type];\n    result[key] = [];\n    for (let node of el.nodes) {\n      const item = {};\n      for (let k in node) {\n        // noinspection JSUnfilteredForInLoop\n        item[fieldMap[k] || k] = node[k];\n      }\n      result[key].push({ data: item });\n    }\n  }\n\n  return result;\n}\n\nfunction getHeaders(sessionID) {\n  return {\n    \"x-session-id\": sessionID,\n    \"Content-Type\": \"application/json\"\n  };\n}\n\nexport const show = async (sessionID, nids, timestamp, options) => {\n  const url = new URL(`${document.location.origin}/api/show`);\n  url.search = new URLSearchParams(\n    Object.assign(timestamp ? { timestamp } : {}, options)\n  );\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: nids ? JSON.stringify(nids) : undefined,\n    headers: getHeaders(sessionID)\n  });\n  const data = JSON.parse(await response.text());\n\n  return cg2cy(data);\n};\n\nexport const list = async (sessionID, _rawId) => {\n  const url = new URL(`${document.location.origin}/api/list`);\n  url.search = new URLSearchParams({ _rawId });\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: getHeaders(sessionID)\n  });\n\n  return JSON.parse(await response.text());\n};\n\nexport const log = async sessionID => {\n  const url = new URL(`${document.location.origin}/api/log`);\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: getHeaders(sessionID)\n  });\n\n  return JSON.parse(await response.text());\n};\n\nexport const remove = async (sessionID, nid) => {\n  const url = new URL(`${document.location.origin}/api/remove`);\n  url.search = new URLSearchParams({ nid });\n\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: getHeaders(sessionID)\n  });\n\n  return response.text();\n};\n\nexport const init = async sessionID => {\n  const url = new URL(`${document.location.origin}/api/init`);\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: getHeaders(sessionID)\n  });\n\n  return response.text();\n};\n\nexport const addChildren = async (sessionID, parentID, children) => {\n  const url = new URL(`${document.location.origin}/api/add`);\n  url.search = new URLSearchParams({ parentID });\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: getHeaders(sessionID),\n    body: JSON.stringify(children)\n  });\n\n  return response.text();\n};\n\nexport const edit = async (sessionID, node) => {\n  const url = new URL(`${document.location.origin}/api/edit`);\n\n  const response = await fetch(url, {\n    method: \"PUT\",\n    headers: getHeaders(sessionID),\n    body: JSON.stringify(node)\n  });\n\n  return response.text();\n};\n",
    "function uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport const generateSessionID = () => {\n  const sessionID = uuidv4();\n  window.localStorage.setItem(\"sessionID\", sessionID);\n\n  return sessionID;\n};\n\nexport const getObjClass = data => {\n  return data[\"obj-class\"]\n    .substr(0, data[\"obj-class\"].length - 1)\n    .replace(/_/g, \" \")\n    .toProperCase();\n};\n\nexport const getTableProps = el => {\n  const data = Object.assign({}, el.data());\n  delete data.id;\n  delete data._rawId;\n\n  const objClass = getObjClass(data);\n  delete data[\"obj-class\"];\n\n  const body = data.Body;\n  delete data.Body;\n\n  const content = Object.entries(data).map(entry => ({\n    field: entry[0],\n    value: entry[1]\n  }));\n\n  return { objClass, body, content };\n};\n\nexport const removePopper = (popperKey, divKey) => {\n  const popper = window.poppers[popperKey];\n  if (popper) {\n    window.poppers[popperKey].destroy();\n    delete window.poppers[popperKey];\n  }\n\n  const el = document.getElementById(divKey);\n  if (el) {\n    el.remove();\n  }\n};\n\nexport const setPopper = (id, popper) => {\n  window.poppers = window.poppers || {};\n  window.poppers[id] = popper;\n};\n",
    "import React from \"react\";\nimport { Repeat } from \"react-feather\";\nimport { Button } from \"reactstrap\";\n\nexport default ({ canvas }) => (\n  <Button\n    className=\"ml-1\"\n    color=\"primary\"\n    onClick={canvas.cyReset.bind(canvas)}\n  >\n    <Repeat size={16} /> Redraw\n  </Button>\n);\n",
    "import React from \"react\";\nimport { RotateCcw } from \"react-feather\";\nimport { Button } from \"reactstrap\";\n\nexport default ({ canvas }) => (\n  <Button\n    color=\"danger\"\n    onClick={async () => {\n      const confirmed = window.confirm(\n        \"Are you sure? You will lose all your changes and history!\"\n      );\n      if (confirmed) {\n        await canvas.reset();\n        canvas.cy.reset();\n        canvas.setElements();\n      }\n    }}\n  >\n    <RotateCcw size={16} /> Reset\n  </Button>\n);\n",
    "import React from \"react\";\nimport { X } from \"react-feather\";\nimport { CardLink } from \"reactstrap\";\nimport { removePopper } from \"../../../lib/utils\";\n\nexport default ({ popperKey, divKey }) => (\n  <CardLink\n    href=\"#\"\n    className=\"btn btn-outline-dark float-right align-bottom ml-1\"\n    onClick={() => removePopper(popperKey, divKey)}\n  >\n    <X />\n  </CardLink>\n);\n",
    "import PopperCore from \"popper.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\nimport ReactDOM from \"react-dom\";\nimport { Search } from \"react-feather\";\nimport { Button, Card, CardBody, CardText, CardTitle } from \"reactstrap\";\nimport { getObjClass, removePopper, setPopper } from \"../../../lib/utils\";\nimport CloseButton from \"../elements/CloseButton\";\n\nexport default ({ canvas }) => (\n  <Button\n    className=\"ml-1\"\n    outline\n    color=\"info\"\n    id=\"search\"\n    onClick={() => handler(canvas)}\n  >\n    <Search size={16} /> Search\n  </Button>\n);\n\nfunction handler(canvas) {\n  const data = canvas.cy\n    .$(\"node\")\n    .jsons()\n    .map(node => {\n      const d = node.data;\n\n      return {\n        Body: d.Body,\n        Type: d.Type,\n        Class: getObjClass(d),\n        id: d.id\n      };\n    });\n  const columns = [\n    {\n      dataField: \"Body\",\n      text: \"Body\",\n      sort: true,\n      filter: textFilter()\n    },\n    {\n      dataField: \"Class\",\n      text: \"Class\",\n      sort: true,\n      filter: textFilter()\n    },\n    {\n      dataField: \"Type\",\n      text: \"Type\",\n      sort: true,\n      filter: textFilter()\n    }\n  ];\n\n  const selectRow = {\n    mode: \"radio\",\n    clickToSelect: true,\n    bgColor: \"#00BFFF\",\n    onSelect: row => {\n      const cy = canvas.cy;\n      const node = cy.$id(row.id);\n      const renderedPosition = node.renderedPosition();\n      const viewportCenterX = cy.width() / 2;\n      const viewportCenterY = cy.height() / 2;\n      const relativeRenderedPosition = {\n        x: viewportCenterX - renderedPosition.x,\n        y: viewportCenterY - renderedPosition.y\n      };\n      const zoomFactor =\n        Math.min(\n          viewportCenterX / node.width(),\n          viewportCenterY / node.height()\n        ) / 2;\n\n      if (cy.$(\"node\").length <= 50) {\n        cy.animate({\n          panBy: relativeRenderedPosition,\n          duration: 500\n        }).delay(100, () => {\n          cy.animate({\n            zoom: {\n              level: zoomFactor,\n              renderedPosition: {\n                x: viewportCenterX,\n                y: viewportCenterY\n              }\n            },\n            duration: 500\n          });\n        });\n      } else {\n        cy.panBy(relativeRenderedPosition);\n        cy.zoom({\n          level: zoomFactor,\n          renderedPosition: {\n            x: viewportCenterX,\n            y: viewportCenterY\n          }\n        });\n      }\n\n      removePopper(\"search\", \"popper-search\");\n    }\n  };\n\n  const search = document.createElement(\"div\");\n  ReactDOM.render(\n    <Card className=\"border-dark\">\n      <CardBody>\n        <CardTitle\n          tag=\"h5\"\n          className=\"mw-100 mb-4\"\n          style={{ minWidth: \"50vw\" }}\n        >\n          Search <small className=\"text-muted\">(Jump to Body)</small>\n          <CloseButton divKey=\"popper-search\" popperKey=\"search\" />\n        </CardTitle>\n        <CardText tag=\"div\" className=\"mw-100\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            hover\n            condensed\n            selectRow={selectRow}\n            filter={filterFactory()}\n          />\n        </CardText>\n      </CardBody>\n    </Card>,\n    search\n  );\n\n  document.getElementsByTagName(\"body\")[0].appendChild(search);\n  search.setAttribute(\"id\", \"popper-search\");\n  setPopper(\n    \"search\",\n    new PopperCore(document.getElementById(\"search\"), search)\n  );\n}\n",
    "import PopperCore from \"popper.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Clock, Repeat } from \"react-feather\";\nimport { Badge, Button, Card, CardBody, CardText, CardTitle } from \"reactstrap\";\nimport vis from \"vis-timeline\";\nimport \"vis-timeline/dist/vis-timeline-graph2d.min.css\";\nimport { log } from \"../../../lib/api-client\";\nimport { setPopper } from \"../../../lib/utils\";\nimport CloseButton from \"../elements/CloseButton\";\nimport \"./Timeline.css\";\n\nclass Timeline extends React.Component {\n  componentDidMount() {\n    const { items, groups, options } = this.props;\n\n    setTimeout(() => {\n      const container = document.getElementById(\"timeline-inner\");\n      window.timeline = new vis.Timeline(container, items, groups, options);\n    }, 0);\n  }\n\n  render() {\n    return <div id=\"timeline-inner\" />;\n  }\n}\n\nasync function handler(sessionID) {\n  const { groups, items } = await log(sessionID);\n  for (const i of items) {\n    i.content = i.className.toProperCase();\n    i.title = new Date(i.start);\n  }\n\n  const options = {\n    width: \"95vw\",\n    type: \"box\",\n    zoomKey: \"ctrlKey\",\n    orientation: {\n      axis: \"both\"\n    },\n    stack: false,\n    groupHeightMode: \"fitItems\",\n    stackSubgroups: false\n  };\n\n  const timeline = document.createElement(\"div\");\n  ReactDOM.render(\n    <Card className=\"border-dark\">\n      <CardBody>\n        <CardTitle\n          tag=\"h5\"\n          className=\"mw-100 mb-4\"\n          style={{ minWidth: \"50vw\" }}\n        >\n          Timeline <small className=\"text-muted\">(History of Changes)</small>\n          <Badge color=\"secondary\" className=\"ml-1\">\n            (CTRL + Scroll to zoom)\n          </Badge>\n          <CloseButton divKey=\"popper-timeline\" popperKey=\"timeline\" />\n          <Button\n            className=\"float-right\"\n            color=\"primary\"\n            onClick={() => window.timeline.fit()}\n          >\n            <Repeat size={16} /> Refit\n          </Button>\n        </CardTitle>\n        <CardText tag=\"div\" className=\"mw-100\">\n          <Timeline items={items} groups={groups} options={options} />\n        </CardText>\n      </CardBody>\n    </Card>,\n    timeline\n  );\n\n  document.getElementsByTagName(\"body\")[0].appendChild(timeline);\n  timeline.setAttribute(\"id\", \"popper-timeline\");\n  setPopper(\n    \"timeline\",\n    new PopperCore(document.getElementById(\"timeline\"), timeline)\n  );\n}\n\nexport default ({ sessionID }) => (\n  <Button\n    className=\"ml-1\"\n    color=\"info\"\n    id=\"timeline\"\n    onClick={() => handler(sessionID)}\n  >\n    <Clock size={16} /> Timeline\n  </Button>\n);\n",
    "import Cytoscape from \"cytoscape\";\nimport Cxtmenu from \"cytoscape-cxtmenu\";\nimport Popper from \"cytoscape-popper\";\nimport React from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport { Col, Row } from \"reactstrap\";\nimport { init, show } from \"../../lib/api-client\";\nimport { generateSessionID } from \"../../lib/utils\";\nimport { Redraw, Reset, Search, Timeline } from \"./action-items\";\nimport \"./Canvas.css\";\nimport styleMap from \"./elements/style-map\";\nimport { add, del, edit, view } from \"./menu-items\";\nimport style from \"./style\";\n\nCytoscape.use(Popper);\nCytoscape.use(Cxtmenu);\n\nclass Canvas extends React.Component {\n  constructor(props = {}) {\n    super(props);\n\n    this.state = {\n      elements: []\n    };\n  }\n\n  async componentDidMount() {\n    window.cy = this.cy;\n\n    this.configurePlugins();\n    this.setHandlers();\n\n    let sessionID = window.localStorage.getItem(\"sessionID\");\n    if (!sessionID) {\n      await this.reset();\n    }\n\n    this.setElements();\n  }\n\n  reset() {\n    const sessionID = generateSessionID();\n    return init(sessionID);\n  }\n\n  configurePlugins() {\n    const cy = this.cy;\n    const minRadius = Math.min(cy.width(), cy.height()) / 8;\n    const cxtMenu = {\n      menuRadius: minRadius + 50, // the radius of the circular menu in pixels\n      selector: \"node\", // elements matching this Cytoscape.js selector will trigger cxtmenus\n      commands: this.buildMenu.bind(this), // function( ele ){ return [ /*...*/ ] }, // a function that returns\n      // commands or a promise of commands\n      fillColor: \"rgba(0, 0, 0, 0.75)\", // the background colour of the menu\n      activeFillColor: \"rgba(100, 100, 100, 0.5)\", // the colour used to indicate the selected command\n      activePadding: 10, // additional size in pixels for the active command\n      indicatorSize: 16, // the size in pixels of the pointer to the active command\n      separatorWidth: 3, // the empty spacing in pixels between successive commands\n      spotlightPadding: 4, // extra spacing in pixels between the element and the spotlight\n      minSpotlightRadius: minRadius - 40, // the minimum radius in pixels of the spotlight\n      maxSpotlightRadius: minRadius - 20, // the maximum radius in pixels of the spotlight\n      openMenuEvents: \"tap\", // space-separated cytoscape events that will open the menu; only\n      // `cxttapstart` and/or `taphold` work here\n      itemColor: \"white\", // the colour of text in the command's content\n      itemTextShadowColor: \"transparent\", // the text shadow colour of the command's content\n      // zIndex: 9999, // the z-index of the ui div\n      atMouse: false // draw menu at mouse position\n    };\n\n    // noinspection JSUnresolvedFunction\n    this.cy.cxtmenu(cxtMenu);\n  }\n\n  buildMenu(node) {\n    const sessionID = window.localStorage.getItem(\"sessionID\");\n    const menu = [];\n\n    view(menu);\n    if (node.data()[\"obj-class\"] !== \"stars\") {\n      del(menu, this, sessionID);\n    }\n    edit(menu, this, sessionID);\n    add(menu, this, sessionID);\n\n    return menu;\n  }\n\n  async setElements() {\n    const sessionID = window.localStorage.getItem(\"sessionID\");\n    let data = await show(sessionID);\n    this.setState({\n      elements: data\n    });\n  }\n\n  cyReset() {\n    const cy = this.cy;\n    cy.reset();\n\n    const animate = cy.$(\"node\").length <= 50;\n    if (animate) {\n      cy.layout(this.getOptions(animate)).run();\n    }\n  }\n\n  setHandlers() {\n    const cy = this.cy;\n\n    cy.on(\"mouseover\", \"node\", function() {\n      document.getElementById(\"cy\").style.cursor = \"pointer\";\n    });\n\n    cy.on(\"mouseout\", \"node\", function() {\n      document.getElementById(\"cy\").style.cursor = \"default\";\n    });\n\n    cy.on(\"select mouseover\", \"edge\", e => {\n      e.target.style({\n        width: 4,\n        \"line-color\": \"#007bff\",\n        \"target-arrow-color\": \"#007bff\"\n      });\n    });\n\n    cy.on(\"unselect mouseout\", \"edge\", e => {\n      const edge = e.target;\n\n      if (!edge.selected()) {\n        edge.style({\n          width: 2,\n          \"line-color\": \"#ccc\",\n          \"target-arrow-color\": \"#ccc\"\n        });\n      }\n    });\n\n    cy.on(\"add\", \"node\", e => {\n      const node = e.target;\n      node.style(\"background-color\", styleMap[node.data()[\"obj-class\"]]);\n\n      // noinspection JSNonASCIINames\n      const size =\n        Math.log(50 * (parseFloat(node.data()[\"Radius (R⊕)\"]) || 1)) * 10;\n      node.style(\"width\", `${size}px`);\n      node.style(\"height\", `${size}px`);\n\n      node.scratch(\"style\", node.style());\n    });\n\n    cy.on(\"mouseover select\", \"node\", e => {\n      e.target.style(\"background-color\", \"#007bff\");\n    });\n\n    cy.on(\"mouseout unselect\", \"node\", e => {\n      const node = e.target;\n\n      if (!node.selected()) {\n        node.style(\n          \"background-color\",\n          node.scratch(\"style\")[\"background-color\"]\n        );\n      }\n    });\n  }\n\n  getOptions(animate = true) {\n    // noinspection JSUnusedGlobalSymbols\n    return {\n      name: \"breadthfirst\",\n\n      fit: animate, // whether to fit the viewport to the graph\n      directed: true, // whether the tree is directed downwards (or edges can point in any direction if false)\n      padding: 30, // padding on fit\n      circle: false, // put depths in concentric circles if true, put depths top down if false\n      grid: false, // whether to create an even grid into which the DAG is placed (circle:false only)\n      spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n      avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n      nodeDimensionsIncludeLabels: true, // Excludes the label when calculating node bounding boxes for the layout\n      // algorithm\n      maximal: true, // whether to shift nodes down their natural BFS depths in order to avoid upwards edges (DAGS\n      // only)\n      animate, // whether to transition the node positions\n      animationDuration: 500, // duration of animation in ms if enabled\n      animateFilter: function() {\n        return true;\n      }, // a function that determines whether the node should be animated.  All nodes animated by default on animate\n      // enabled.  Non-animated nodes are positioned immediately when the layout starts\n      transform: function(node, position) {\n        return position;\n      } // transform a given node position. Useful for changing flow direction in discrete layouts\n    };\n  }\n\n  render() {\n    const options = this.getOptions();\n\n    return (\n      <div>\n        <Row className=\"my-1\">\n          <Col>\n            <Reset canvas={this} />\n            <Redraw canvas={this} />\n            <Search canvas={this} />\n            <Timeline sessionID={window.localStorage.getItem(\"sessionID\")} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div\n              className=\"border border-secondary rounded w-100\"\n              id=\"cy-container\"\n            >\n              <div className=\"m-1\" id=\"cy\">\n                <CytoscapeComponent\n                  cy={cy => {\n                    this.cy = cy;\n                  }}\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  stylesheet={style}\n                  layout={options}\n                  elements={CytoscapeComponent.normalizeElements(\n                    this.state.elements\n                  )}\n                />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n",
    "import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport ReactDOM from \"react-dom\";\nimport { Eye } from \"react-feather\";\nimport { Card, CardBody, CardText, CardTitle } from \"reactstrap\";\nimport { getTableProps, setPopper } from \"../../../lib/utils\";\nimport CloseButton from \"../elements/CloseButton\";\n\nexport default menu => {\n  const view = document.createElement(\"span\");\n  ReactDOM.render(<Eye />, view);\n  menu.push({\n    fillColor: \"rgba(0, 0, 200, 0.75)\",\n    content: view.outerHTML,\n    select: function(el) {\n      setPopper(\n        el.id(),\n        el.popper({\n          content: () => {\n            const { objClass, body, content } = getTableProps(el);\n\n            const columns = [\n              {\n                dataField: \"field\",\n                text: \"Field\"\n              },\n              {\n                dataField: \"value\",\n                text: \"Value\"\n              }\n            ];\n\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card className=\"border-dark\">\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    {body}&nbsp;\n                    <span>\n                      <small className=\"text-muted\">({objClass})</small>\n                    </span>\n                    <CloseButton\n                      divKey={`popper-${el.id()}`}\n                      popperKey={el.id()}\n                    />\n                  </CardTitle>\n                  <CardText tag=\"div\">\n                    <BootstrapTable\n                      bootstrap4\n                      keyField=\"field\"\n                      data={content}\n                      columns={columns}\n                      hover\n                      condensed\n                    />\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        })\n      );\n    },\n    enabled: true\n  });\n};\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Trash2 } from \"react-feather\";\nimport { remove } from \"../../../lib/api-client\";\n\nexport default (menu, canvas, sessionID) => {\n  const del = document.createElement(\"span\");\n  ReactDOM.render(<Trash2 />, del);\n  menu.push({\n    fillColor: \"rgba(200, 0, 0, 0.75)\",\n    content: del.outerHTML,\n    contentStyle: {},\n    select: async function(el) {\n      const confirmed = window.confirm(\n        \"Are you sure? This will remove the selected node and ALL its descendants!\"\n      );\n      if (confirmed) {\n        await remove(sessionID, el.id());\n        canvas.setElements();\n      }\n    },\n    enabled: true\n  });\n};\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Edit3, Save } from \"react-feather\";\nimport {\n  Card,\n  CardBody,\n  CardLink,\n  CardText,\n  CardTitle,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { edit as editNode } from \"../../../lib/api-client\";\nimport { getTableProps, removePopper, setPopper } from \"../../../lib/utils\";\nimport CloseButton from \"../elements/CloseButton\";\n\nexport default (menu, canvas, sessionID) => {\n  const edit = document.createElement(\"span\");\n  ReactDOM.render(<Edit3 />, edit);\n  menu.push({\n    fillColor: \"rgba(255, 165, 0, 0.75)\",\n    content: edit.outerHTML,\n    select: function(el) {\n      setPopper(\n        el.id(),\n        el.popper({\n          content: () => {\n            const { objClass, body, content } = getTableProps(el);\n\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card className=\"border-dark\">\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    Edit {body}&nbsp;\n                    <span>\n                      <small className=\"text-muted\">({objClass})</small>\n                    </span>\n                    <CloseButton\n                      divKey={`popper-${el.id()}`}\n                      popperKey={el.id()}\n                    />\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-primary float-right\"\n                      id=\"add\"\n                      onClick={async () => {\n                        const data = Object.assign({}, el.data());\n\n                        for (const c of content) {\n                          data[c.field] = c.value;\n                        }\n                        data._id = data.id;\n                        delete data.id;\n\n                        removePopper(el.id(), `popper-${el.id()}`);\n\n                        await editNode(sessionID, data);\n                        canvas.setElements();\n                      }}\n                    >\n                      <Save /> Save\n                    </CardLink>\n                  </CardTitle>\n                  <CardText tag=\"div\">\n                    <Form>\n                      {content.map(c => (\n                        <FormGroup key={c.field} row>\n                          <Label for={`${el.id()}-${c.field}`} sm={4} size=\"sm\">\n                            {c.field}\n                          </Label>\n                          <Col sm={8}>\n                            <Input\n                              type=\"text\"\n                              name={c.field}\n                              id={`${el.id()}-${c.field}`}\n                              defaultValue={c.value}\n                              required={true}\n                              bsSize=\"sm\"\n                              onChange={e => {\n                                c.value = e.target.value;\n                              }}\n                            />\n                          </Col>\n                        </FormGroup>\n                      ))}\n                    </Form>\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        })\n      );\n    },\n    enabled: true\n  });\n};\n",
    "import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\nimport ReactDOM from \"react-dom\";\nimport { Plus } from \"react-feather\";\nimport { Card, CardBody, CardLink, CardText, CardTitle } from \"reactstrap\";\nimport { addChildren, list } from \"../../../lib/api-client\";\nimport { getObjClass, removePopper, setPopper } from \"../../../lib/utils\";\nimport CloseButton from \"../elements/CloseButton\";\n\nexport default (menu, canvas, sessionID) => {\n  const add = document.createElement(\"span\");\n  ReactDOM.render(<Plus />, add);\n  menu.push({\n    fillColor: \"rgba(0, 200, 0, 0.75)\",\n    content: add.outerHTML,\n    contentStyle: {},\n    select: async function(el) {\n      const children = el.outgoers(\"node\");\n      const data = (await list(sessionID, el.data()._rawId)).filter(\n        d => !children.filter(c => c.data()._rawId === d._rawId).length\n      );\n\n      for (let d of data) {\n        d.Class = getObjClass(d);\n      }\n\n      const columns = [\n        {\n          dataField: \"Body\",\n          text: \"Body\",\n          sort: true,\n          filter: textFilter()\n        },\n        {\n          dataField: \"Class\",\n          text: \"Class\",\n          sort: true,\n          filter: textFilter()\n        },\n        {\n          dataField: \"Type\",\n          text: \"Type\",\n          sort: true,\n          filter: textFilter()\n        }\n      ];\n\n      const selected = new Set();\n      const selectRow = {\n        mode: \"checkbox\",\n        clickToSelect: true,\n        bgColor: \"#00BFFF\",\n        onSelect: (row, isSelect) => {\n          const addButton = document.getElementById(\"add\");\n\n          if (isSelect) {\n            selected.add(row._rawId);\n            if (addButton.classList.contains(\"disabled\")) {\n              addButton.classList.remove(\"disabled\");\n            }\n          } else {\n            selected.delete(row._rawId);\n            if (!selected.size) {\n              addButton.classList.add(\"disabled\");\n            }\n          }\n        },\n        onSelectAll: (isSelect, rows) => {\n          const addButton = document.getElementById(\"add\");\n\n          if (isSelect) {\n            for (const row of rows) {\n              selected.add(row._rawId);\n              addButton.classList.remove(\"disabled\");\n            }\n          } else {\n            selected.clear();\n            addButton.classList.add(\"disabled\");\n          }\n        }\n      };\n\n      setPopper(\n        el.id(),\n        el.popper({\n          content: () => {\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card className=\"border-dark\">\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    Add Orbiting Body{\" \"}\n                    <small className=\"text-muted\">({el.data().Body})</small>\n                    <CloseButton\n                      divKey={`popper-${el.id()}`}\n                      popperKey={el.id()}\n                    />\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-success disabled float-right\"\n                      id=\"add\"\n                      onClick={async () => {\n                        const selectedData = data.filter(d =>\n                          selected.has(d._rawId)\n                        );\n                        for (let s of selectedData) {\n                          delete s.Class;\n                        }\n\n                        removePopper(el.id(), `popper-${el.id()}`);\n\n                        await addChildren(sessionID, el.id(), selectedData);\n                        canvas.setElements();\n                      }}\n                    >\n                      <Plus /> Add Selected\n                    </CardLink>\n                  </CardTitle>\n                  <CardText tag=\"div\" className=\"mw-100\">\n                    {data.length ? (\n                      <BootstrapTable\n                        bootstrap4\n                        keyField=\"_rawId\"\n                        data={data}\n                        columns={columns}\n                        hover\n                        condensed\n                        selectRow={selectRow}\n                        filter={filterFactory()}\n                      />\n                    ) : (\n                      <p>No Orbiters Found.</p>\n                    )}\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        })\n      );\n    },\n    enabled: true\n  });\n};\n",
    "import React, { Component } from \"react\";\nimport { GitHub } from \"react-feather\";\nimport {\n  Col,\n  Collapse,\n  Container,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Row\n} from \"reactstrap\";\nimport Canvas from \"../canvas/Canvas\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Navbar\n          color=\"inverse\"\n          light\n          expand=\"md\"\n          className=\"border-bottom mb-2\"\n        >\n          <NavbarBrand href=\"/\" className=\"text-wrap\">\n            CivicGraph Demo - A DIY Solar System\n            <span\n              className=\"spinner-grow mx-2 text-danger invisible\"\n              role=\"status\"\n              id=\"loading\"\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </span>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  href=\"https://github.com/adityamukho/CivicGraph\"\n                  target=\"_blank\"\n                >\n                  <GitHub />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Canvas />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./index.css\";\nimport \"./lib/polyfills\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}