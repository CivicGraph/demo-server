{
  "version": 3,
  "sources": [
    "lib/polyfills.js",
    "lib/api-client.js",
    "lib/utils.js",
    "components/canvas/Canvas.js",
    "components/app/App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "String",
    "prototype",
    "toProperCase",
    "this",
    "replace",
    "txt",
    "charAt",
    "toUpperCase",
    "substr",
    "toLowerCase",
    "_oldFetch",
    "fetch",
    "window",
    "fetchStart",
    "Event",
    "view",
    "document",
    "bubbles",
    "cancelable",
    "fetchEnd",
    "fetchCall",
    "apply",
    "arguments",
    "dispatchEvent",
    "then",
    "catch",
    "addEventListener",
    "spinner",
    "getElementById",
    "classList",
    "remove",
    "add",
    "cg2cy",
    "data",
    "typeMap",
    "vertex",
    "edge",
    "fieldMap",
    "_id",
    "_from",
    "_to",
    "result",
    "el",
    "key",
    "type",
    "nodes",
    "node",
    "item",
    "k",
    "push",
    "getHeaders",
    "sessionID",
    "show",
    "nids",
    "timestamp",
    "options",
    "a",
    "url",
    "URL",
    "location",
    "origin",
    "search",
    "URLSearchParams",
    "Object",
    "assign",
    "method",
    "body",
    "JSON",
    "stringify",
    "undefined",
    "headers",
    "response",
    "text",
    "parse",
    "list",
    "_rawId",
    "nid",
    "init",
    "addChildren",
    "parentID",
    "children",
    "edit",
    "generateSessionID",
    "c",
    "r",
    "Math",
    "random",
    "toString",
    "localStorage",
    "setItem",
    "getObjClass",
    "length",
    "Cytoscape",
    "use",
    "Popper",
    "Cxtmenu",
    "Canvas",
    "props",
    "state",
    "elements",
    "cy",
    "configurePlugins",
    "setHandlers",
    "getItem",
    "reset",
    "setElements",
    "cxtMenu",
    "menuRadius",
    "selector",
    "commands",
    "buildMenu",
    "bind",
    "fillColor",
    "activeFillColor",
    "activePadding",
    "indicatorSize",
    "separatorWidth",
    "spotlightPadding",
    "minSpotlightRadius",
    "maxSpotlightRadius",
    "openMenuEvents",
    "itemColor",
    "itemTextShadowColor",
    "zIndex",
    "atMouse",
    "cxtmenu",
    "menu",
    "self",
    "createElement",
    "ReactDOM",
    "render",
    "content",
    "outerHTML",
    "select",
    "poppers",
    "id",
    "popper",
    "objClass",
    "Body",
    "entries",
    "map",
    "entry",
    "field",
    "value",
    "popperCard",
    "Card",
    "CardBody",
    "CardTitle",
    "tag",
    "className",
    "style",
    "minWidth",
    "CardLink",
    "href",
    "onClick",
    "destroy",
    "CardText",
    "bootstrap4",
    "keyField",
    "columns",
    "dataField",
    "hover",
    "getElementsByTagName",
    "appendChild",
    "setAttribute",
    "enabled",
    "del",
    "contentStyle",
    "confirm",
    "cancel",
    "editNode",
    "Form",
    "FormGroup",
    "row",
    "Label",
    "for",
    "sm",
    "size",
    "Col",
    "Input",
    "name",
    "defaultValue",
    "required",
    "bsSize",
    "onChange",
    "e",
    "target",
    "outgoers",
    "d",
    "filter",
    "Class",
    "sort",
    "textFilter",
    "selected",
    "Set",
    "selectRow",
    "mode",
    "clickToSelect",
    "bgColor",
    "onSelect",
    "isSelect",
    "addButton",
    "contains",
    "delete",
    "onSelectAll",
    "rows",
    "clear",
    "selectedData",
    "has",
    "condensed",
    "filterFactory",
    "setState",
    "animate",
    "$",
    "layout",
    "getOptions",
    "run",
    "on",
    "width",
    "stars",
    "planets",
    "dwarf_planets",
    "moons",
    "comets",
    "asteroids",
    "log",
    "parseFloat",
    "scratch",
    "fit",
    "directed",
    "padding",
    "circle",
    "grid",
    "spacingFactor",
    "avoidOverlap",
    "nodeDimensionsIncludeLabels",
    "maximal",
    "animationDuration",
    "animateFilter",
    "transform",
    "position",
    "Row",
    "height",
    "stylesheet",
    "CytoscapeComponent",
    "normalizeElements",
    "Button",
    "color",
    "cyReset",
    "outline",
    "jsons",
    "Type",
    "$id",
    "renderedPosition",
    "viewportCenterX",
    "viewportCenterY",
    "relativeRenderedPosition",
    "x",
    "y",
    "zoomFactor",
    "min",
    "panBy",
    "duration",
    "delay",
    "zoom",
    "level",
    "PopperCore",
    "React",
    "Component",
    "App",
    "toggle",
    "isOpen",
    "Container",
    "fluid",
    "Navbar",
    "light",
    "expand",
    "NavbarBrand",
    "role",
    "NavbarToggler",
    "Collapse",
    "navbar",
    "Nav",
    "NavItem",
    "NavLink",
    "Boolean",
    "hostname",
    "match",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.db63c8b0.chunk.js",
  "sourcesContent": [
    "// eslint-disable-next-line no-extend-native\nString.prototype.toProperCase = function() {\n  return this.replace(/\\w\\S*/g, function(txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\n// Store a copy of the fetch function\nconst _oldFetch = fetch;\n\n// Create our new version of the fetch function\nwindow.fetch = function() {\n  // Create hooks\n  const fetchStart = new Event(\"fetchStart\", {\n    view: document,\n    bubbles: true,\n    cancelable: false\n  });\n  const fetchEnd = new Event(\"fetchEnd\", {\n    view: document,\n    bubbles: true,\n    cancelable: false\n  });\n\n  // Pass the supplied arguments to the real fetch function\n  const fetchCall = _oldFetch.apply(this, arguments);\n\n  // Trigger the fetchStart event\n  document.dispatchEvent(fetchStart);\n\n  fetchCall\n    .then(function() {\n      // Trigger the fetchEnd event\n      document.dispatchEvent(fetchEnd);\n    })\n    .catch(function() {\n      // Trigger the fetchEnd event\n      document.dispatchEvent(fetchEnd);\n    });\n\n  return fetchCall;\n};\n\ndocument.addEventListener(\"fetchStart\", function() {\n  const spinner = document.getElementById(\"loading\");\n  spinner.classList.remove(\"invisible\");\n  spinner.classList.add(\"visible\");\n});\n\ndocument.addEventListener(\"fetchEnd\", function() {\n  const spinner = document.getElementById(\"loading\");\n  spinner.classList.remove(\"visible\");\n  spinner.classList.add(\"invisible\");\n});\n",
    "function cg2cy(data) {\n  const typeMap = {\n    vertex: \"nodes\",\n    edge: \"edges\"\n  };\n  const fieldMap = {\n    _id: \"id\",\n    _from: \"source\",\n    _to: \"target\"\n  };\n\n  const result = {};\n\n  for (let el of data) {\n    const key = typeMap[el.type];\n    result[key] = [];\n    for (let node of el.nodes) {\n      const item = {};\n      for (let k in node) {\n        // noinspection JSUnfilteredForInLoop\n        item[fieldMap[k] || k] = node[k];\n      }\n      result[key].push({ data: item });\n    }\n  }\n\n  return result;\n}\n\nfunction getHeaders(sessionID) {\n  return {\n    \"x-session-id\": sessionID,\n    \"Content-Type\": \"application/json\"\n  };\n}\n\nexport const show = async (sessionID, nids, timestamp, options) => {\n  const url = new URL(`${document.location.origin}/api/show`);\n  url.search = new URLSearchParams(\n    Object.assign(timestamp ? { timestamp } : {}, options)\n  );\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: nids ? JSON.stringify(nids) : undefined,\n    headers: getHeaders(sessionID)\n  });\n  const data = JSON.parse(await response.text());\n\n  return cg2cy(data);\n};\n\nexport const list = async (sessionID, _rawId) => {\n  const url = new URL(`${document.location.origin}/api/list`);\n  url.search = new URLSearchParams({ _rawId });\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: getHeaders(sessionID)\n  });\n\n  return JSON.parse(await response.text());\n};\n\nexport const remove = async (sessionID, nid) => {\n  const url = new URL(`${document.location.origin}/api/remove`);\n  url.search = new URLSearchParams({ nid });\n\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: getHeaders(sessionID)\n  });\n\n  return response.text();\n};\n\nexport const init = async sessionID => {\n  const url = new URL(`${document.location.origin}/api/init`);\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: getHeaders(sessionID)\n  });\n\n  return response.text();\n};\n\nexport const addChildren = async (sessionID, parentID, children) => {\n  const url = new URL(`${document.location.origin}/api/add`);\n  url.search = new URLSearchParams({ parentID });\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: getHeaders(sessionID),\n    body: JSON.stringify(children)\n  });\n\n  return response.text();\n};\n\nexport const edit = async (sessionID, node) => {\n  const url = new URL(`${document.location.origin}/api/edit`);\n\n  const response = await fetch(url, {\n    method: \"PUT\",\n    headers: getHeaders(sessionID),\n    body: JSON.stringify(node)\n  });\n\n  return response.text();\n};\n",
    "function uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport const generateSessionID = () => {\n  const sessionID = uuidv4();\n  window.localStorage.setItem(\"sessionID\", sessionID);\n\n  return sessionID;\n};\n\nexport const escapeHtml = unsafe => {\n  return unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n};\n\nexport const getObjClass = data => {\n  return data[\"obj-class\"]\n    .substr(0, data[\"obj-class\"].length - 1)\n    .replace(/_/g, \" \")\n    .toProperCase();\n};\n",
    "import Cytoscape from \"cytoscape\";\nimport Cxtmenu from \"cytoscape-cxtmenu\";\nimport Popper from \"cytoscape-popper\";\nimport PopperCore from \"popper.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Edit3,\n  Eye,\n  Plus,\n  Repeat,\n  RotateCcw,\n  Save,\n  Search,\n  Trash2,\n  X,\n  XCircle\n} from \"react-feather\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardLink,\n  CardText,\n  CardTitle,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row\n} from \"reactstrap\";\nimport {\n  addChildren,\n  edit as editNode,\n  init,\n  list,\n  remove,\n  show\n} from \"../../lib/api-client\";\nimport { generateSessionID, getObjClass } from \"../../lib/utils\";\nimport \"./Canvas.css\";\nimport style from \"./style\";\n\nCytoscape.use(Popper);\nCytoscape.use(Cxtmenu);\n\nclass Canvas extends React.Component {\n  constructor(props = {}) {\n    super(props);\n\n    this.state = {\n      elements: []\n    };\n  }\n\n  async componentDidMount() {\n    window.cy = this.cy;\n\n    this.configurePlugins();\n    this.setHandlers();\n\n    let sessionID = window.localStorage.getItem(\"sessionID\");\n    if (!sessionID) {\n      await this.reset();\n    }\n\n    this.setElements();\n  }\n\n  reset() {\n    const sessionID = generateSessionID();\n    return init(sessionID);\n  }\n\n  configurePlugins() {\n    const cxtMenu = {\n      menuRadius: 60, // the radius of the circular menu in pixels\n      selector: \"node\", // elements matching this Cytoscape.js selector will trigger cxtmenus\n      commands: this.buildMenu.bind(this), // function( ele ){ return [ /*...*/ ] }, // a function that returns\n      // commands or a promise of commands\n      fillColor: \"rgba(0, 0, 0, 0.75)\", // the background colour of the menu\n      activeFillColor: \"rgba(100, 100, 100, 0.5)\", // the colour used to indicate the selected command\n      activePadding: 10, // additional size in pixels for the active command\n      indicatorSize: 16, // the size in pixels of the pointer to the active command\n      separatorWidth: 3, // the empty spacing in pixels between successive commands\n      spotlightPadding: 4, // extra spacing in pixels between the element and the spotlight\n      minSpotlightRadius: 10, // the minimum radius in pixels of the spotlight\n      maxSpotlightRadius: 20, // the maximum radius in pixels of the spotlight\n      openMenuEvents: \"taphold cxttap\", // space-separated cytoscape events that will open the menu; only\n      // `cxttapstart` and/or `taphold` work here\n      itemColor: \"white\", // the colour of text in the command's content\n      itemTextShadowColor: \"transparent\", // the text shadow colour of the command's content\n      zIndex: 9999, // the z-index of the ui div\n      atMouse: false // draw menu at mouse position\n    };\n\n    this.cy.cxtmenu(cxtMenu);\n  }\n\n  buildMenu(node) {\n    const sessionID = window.localStorage.getItem(\"sessionID\");\n    const menu = [];\n    const self = this;\n\n    const view = document.createElement(\"span\");\n    ReactDOM.render(<Eye />, view);\n    menu.push({\n      fillColor: \"rgba(0, 0, 200, 0.75)\",\n      content: view.outerHTML,\n      select: function(el) {\n        window.poppers = window.poppers || {};\n        window.poppers[el.id()] = el.popper({\n          content: () => {\n            const data = Object.assign({}, el.data());\n            delete data.id;\n            delete data._rawId;\n            const objClass = getObjClass(data);\n            delete data[\"obj-class\"];\n            const body = data.Body;\n            delete data.Body;\n\n            const content = Object.entries(data).map(entry => ({\n              field: entry[0],\n              value: entry[1]\n            }));\n\n            const columns = [\n              {\n                dataField: \"field\",\n                text: \"Field\"\n              },\n              {\n                dataField: \"value\",\n                text: \"Value\"\n              }\n            ];\n\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card>\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    {body}&nbsp;\n                    <span>\n                      <small className=\"text-muted\">({objClass})</small>\n                    </span>\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-outline-dark float-right align-bottom\"\n                      onClick={() => {\n                        window.poppers[el.id()].destroy();\n                        document.getElementById(`popper-${el.id()}`).remove();\n                      }}\n                    >\n                      <X />\n                    </CardLink>\n                  </CardTitle>\n                  <CardText tag=\"div\">\n                    <BootstrapTable\n                      bootstrap4\n                      keyField=\"field\"\n                      data={content}\n                      columns={columns}\n                      hover\n                    />\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        });\n      },\n      enabled: true\n    });\n\n    if (node.data()[\"obj-class\"] !== \"stars\") {\n      const del = document.createElement(\"span\");\n      ReactDOM.render(<Trash2 />, del);\n      menu.push({\n        fillColor: \"rgba(200, 0, 0, 0.75)\",\n        content: del.outerHTML,\n        contentStyle: {},\n        select: async function(el) {\n          const confirmed = window.confirm(\n            \"Are you sure? This will remove the selected node and ALL its descendants!\"\n          );\n          if (confirmed) {\n            await remove(sessionID, el.id());\n            self.setElements();\n          }\n        },\n        enabled: true\n      });\n    }\n\n    const cancel = document.createElement(\"span\");\n    ReactDOM.render(<XCircle />, cancel);\n    menu.push({\n      fillColor: \"rgba(200, 200, 200, 0.75)\",\n      content: cancel.outerHTML,\n      enabled: true\n    });\n\n    const edit = document.createElement(\"span\");\n    ReactDOM.render(<Edit3 />, edit);\n    menu.push({\n      fillColor: \"rgba(255, 165, 0, 0.75)\",\n      content: edit.outerHTML,\n      select: function(el) {\n        window.poppers = window.poppers || {};\n        window.poppers[el.id()] = el.popper({\n          content: () => {\n            const data = Object.assign({}, el.data());\n            delete data.id;\n            delete data._rawId;\n\n            const objClass = getObjClass(data);\n            delete data[\"obj-class\"];\n\n            const body = data.Body;\n            delete data.Body;\n\n            const content = Object.entries(data).map(entry => ({\n              field: entry[0],\n              value: entry[1]\n            }));\n\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card>\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    Edit {body}&nbsp;\n                    <span>\n                      <small className=\"text-muted\">({objClass})</small>\n                    </span>\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-outline-dark float-right align-bottom ml-1\"\n                      onClick={() => {\n                        window.poppers[el.id()].destroy();\n                        document.getElementById(`popper-${el.id()}`).remove();\n                      }}\n                    >\n                      <X />\n                    </CardLink>\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-primary float-right\"\n                      id=\"add\"\n                      onClick={async () => {\n                        const data = Object.assign({}, el.data());\n\n                        for (const c of content) {\n                          data[c.field] = c.value;\n                        }\n                        data._id = data.id;\n                        delete data.id;\n\n                        window.poppers[el.id()].destroy();\n                        document.getElementById(`popper-${el.id()}`).remove();\n\n                        await editNode(sessionID, data);\n                        self.setElements();\n                      }}\n                    >\n                      <Save /> Save\n                    </CardLink>\n                  </CardTitle>\n                  <CardText tag=\"div\">\n                    <Form>\n                      {content.map(c => (\n                        <FormGroup key={c.field} row>\n                          <Label for={`${el.id()}-${c.field}`} sm={4} size=\"sm\">\n                            {c.field}\n                          </Label>\n                          <Col sm={8}>\n                            <Input\n                              type=\"text\"\n                              name={c.field}\n                              id={`${el.id()}-${c.field}`}\n                              defaultValue={c.value}\n                              required={true}\n                              bsSize=\"sm\"\n                              onChange={e => {\n                                c.value = e.target.value;\n                              }}\n                            />\n                          </Col>\n                        </FormGroup>\n                      ))}\n                    </Form>\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        });\n      },\n      enabled: true\n    });\n\n    const add = document.createElement(\"span\");\n    ReactDOM.render(<Plus />, add);\n    menu.push({\n      fillColor: \"rgba(0, 200, 0, 0.75)\",\n      content: add.outerHTML,\n      contentStyle: {},\n      select: async function(el) {\n        const children = el.outgoers(\"node\");\n        const data = (await list(sessionID, el.data()._rawId)).filter(\n          d => !children.filter(c => c.data()._rawId === d._rawId).length\n        );\n\n        for (let d of data) {\n          d.Class = getObjClass(d);\n        }\n\n        const columns = [\n          {\n            dataField: \"Body\",\n            text: \"Body\",\n            sort: true,\n            filter: textFilter()\n          },\n          {\n            dataField: \"Class\",\n            text: \"Class\",\n            sort: true,\n            filter: textFilter()\n          },\n          {\n            dataField: \"Type\",\n            text: \"Type\",\n            sort: true,\n            filter: textFilter()\n          }\n        ];\n\n        const selected = new Set();\n        const selectRow = {\n          mode: \"checkbox\",\n          clickToSelect: true,\n          bgColor: \"#00BFFF\",\n          onSelect: (row, isSelect) => {\n            const addButton = document.getElementById(\"add\");\n\n            if (isSelect) {\n              selected.add(row._rawId);\n              if (addButton.classList.contains(\"disabled\")) {\n                addButton.classList.remove(\"disabled\");\n              }\n            } else {\n              selected.delete(row._rawId);\n              if (!selected.size) {\n                addButton.classList.add(\"disabled\");\n              }\n            }\n          },\n          onSelectAll: (isSelect, rows) => {\n            const addButton = document.getElementById(\"add\");\n\n            if (isSelect) {\n              for (const row of rows) {\n                selected.add(row._rawId);\n                addButton.classList.remove(\"disabled\");\n              }\n            } else {\n              selected.clear();\n              addButton.classList.add(\"disabled\");\n            }\n          }\n        };\n\n        window.poppers = window.poppers || {};\n        window.poppers[el.id()] = el.popper({\n          content: () => {\n            const popperCard = document.createElement(\"div\");\n            ReactDOM.render(\n              <Card>\n                <CardBody>\n                  <CardTitle\n                    tag=\"h5\"\n                    className=\"mw-100 mb-4\"\n                    style={{ minWidth: \"50vw\" }}\n                  >\n                    Add Orbiting Body{\" \"}\n                    <small className=\"text-muted\">({el.data().Body})</small>\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-outline-dark float-right align-bottom ml-1\"\n                      onClick={() => {\n                        window.poppers[el.id()].destroy();\n                        document.getElementById(`popper-${el.id()}`).remove();\n                      }}\n                    >\n                      <X />\n                    </CardLink>\n                    <CardLink\n                      href=\"#\"\n                      className=\"btn btn-success disabled float-right\"\n                      id=\"add\"\n                      onClick={async () => {\n                        const selectedData = data.filter(d =>\n                          selected.has(d._rawId)\n                        );\n                        for (let s of selectedData) {\n                          delete s.Class;\n                        }\n\n                        window.poppers[el.id()].destroy();\n                        document.getElementById(`popper-${el.id()}`).remove();\n\n                        await addChildren(sessionID, el.id(), selectedData);\n                        self.setElements();\n                      }}\n                    >\n                      <Plus /> Add Selected\n                    </CardLink>\n                  </CardTitle>\n                  <CardText tag=\"div\" className=\"mw-100\">\n                    {data.length ? (\n                      <BootstrapTable\n                        bootstrap4\n                        keyField=\"_rawId\"\n                        data={data}\n                        columns={columns}\n                        hover\n                        condensed\n                        selectRow={selectRow}\n                        filter={filterFactory()}\n                      />\n                    ) : (\n                      <p>No Orbiters Found.</p>\n                    )}\n                  </CardText>\n                </CardBody>\n              </Card>,\n              popperCard\n            );\n\n            document.getElementsByTagName(\"body\")[0].appendChild(popperCard);\n            popperCard.setAttribute(\"id\", `popper-${el.id()}`);\n\n            return popperCard;\n          }\n        });\n      },\n      enabled: true\n    });\n\n    return menu;\n  }\n\n  async setElements() {\n    const sessionID = window.localStorage.getItem(\"sessionID\");\n    let data = await show(sessionID);\n    this.setState({\n      elements: data\n    });\n  }\n\n  cyReset() {\n    const cy = this.cy;\n    const animate = cy.$(\"node\").length <= 50;\n\n    cy.reset();\n\n    if (animate) {\n      cy.layout(this.getOptions(animate)).run();\n    }\n  }\n\n  setHandlers() {\n    const cy = this.cy;\n\n    cy.on(\"select mouseover\", \"edge\", e => {\n      e.target.style({\n        width: 4,\n        \"line-color\": \"#007bff\",\n        \"target-arrow-color\": \"#007bff\"\n      });\n    });\n\n    cy.on(\"unselect mouseout\", \"edge\", e => {\n      const edge = e.target;\n\n      if (!edge.selected()) {\n        edge.style({\n          width: 2,\n          \"line-color\": \"#ccc\",\n          \"target-arrow-color\": \"#ccc\"\n        });\n      }\n    });\n\n    cy.on(\"add\", \"node\", e => {\n      const node = e.target;\n      const styleMap = {\n        stars: \"#ffff00\",\n        planets: \"#f7a35c\",\n        dwarf_planets: \"#90ee7e\",\n        moons: \"#eeaaee\",\n        comets: \"#aaeeee\",\n        asteroids: \"#ff0066\"\n      };\n      node.style(\"background-color\", styleMap[node.data()[\"obj-class\"]]);\n\n      // noinspection JSNonASCIINames\n      const size =\n        Math.log(50 * (parseFloat(node.data()[\"Radius (R⊕)\"]) || 1)) * 10;\n      node.style(\"width\", `${size}px`);\n      node.style(\"height\", `${size}px`);\n\n      node.scratch(\"style\", node.style());\n    });\n\n    cy.on(\"mouseover select\", \"node\", e => {\n      e.target.style(\"background-color\", \"#007bff\");\n    });\n\n    cy.on(\"mouseout unselect\", \"node\", e => {\n      const node = e.target;\n\n      if (!node.selected()) {\n        node.style(\n          \"background-color\",\n          node.scratch(\"style\")[\"background-color\"]\n        );\n      }\n    });\n  }\n\n  getOptions(animate = true) {\n    return {\n      name: \"breadthfirst\",\n\n      fit: false, // whether to fit the viewport to the graph\n      directed: true, // whether the tree is directed downwards (or edges can point in any direction if false)\n      padding: 30, // padding on fit\n      circle: false, // put depths in concentric circles if true, put depths top down if false\n      grid: false, // whether to create an even grid into which the DAG is placed (circle:false only)\n      spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n      avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n      nodeDimensionsIncludeLabels: true, // Excludes the label when calculating node bounding boxes for the layout\n      // algorithm\n      maximal: true, // whether to shift nodes down their natural BFS depths in order to avoid upwards edges (DAGS\n      // only)\n      animate, // whether to transition the node positions\n      animationDuration: 500, // duration of animation in ms if enabled\n      animateFilter: function() {\n        return true;\n      }, // a function that determines whether the node should be animated.  All nodes animated by default on animate\n      // enabled.  Non-animated nodes are positioned immediately when the layout starts\n      transform: function(node, position) {\n        return position;\n      } // transform a given node position. Useful for changing flow direction in discrete layouts\n    };\n  }\n\n  render() {\n    const options = this.getOptions();\n\n    return (\n      <div>\n        <Row>\n          <Col>\n            <div\n              className=\"border border-secondary rounded w-100\"\n              id=\"cy-container\"\n            >\n              <div className=\"m-1\" id=\"cy\">\n                <CytoscapeComponent\n                  cy={cy => {\n                    this.cy = cy;\n                  }}\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  stylesheet={style}\n                  layout={options}\n                  elements={CytoscapeComponent.normalizeElements(\n                    this.state.elements\n                  )}\n                />\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"my-1\">\n          <Col>\n            <Button\n              className=\"float-right ml-1\"\n              color=\"danger\"\n              onClick={async () => {\n                const confirmed = window.confirm(\n                  \"Are you sure? You will lose all your changes and history!\"\n                );\n                if (confirmed) {\n                  await this.reset();\n                  this.cy.reset();\n                  this.setElements();\n                }\n              }}\n            >\n              <RotateCcw size={16} /> Reset\n            </Button>\n            <Button\n              className=\"float-right ml-1\"\n              color=\"primary\"\n              onClick={this.cyReset.bind(this)}\n            >\n              <Repeat size={16} /> Redraw\n            </Button>\n            <Button\n              className=\"float-right\"\n              outline\n              color=\"info\"\n              id=\"search\"\n              onClick={() => {\n                const data = this.cy\n                  .$(\"node\")\n                  .jsons()\n                  .map(node => {\n                    const d = node.data;\n\n                    return {\n                      Body: d.Body,\n                      Type: d.Type,\n                      Class: getObjClass(d),\n                      id: d.id\n                    };\n                  });\n                const columns = [\n                  {\n                    dataField: \"Body\",\n                    text: \"Body\",\n                    sort: true,\n                    filter: textFilter()\n                  },\n                  {\n                    dataField: \"Class\",\n                    text: \"Class\",\n                    sort: true,\n                    filter: textFilter()\n                  },\n                  {\n                    dataField: \"Type\",\n                    text: \"Type\",\n                    sort: true,\n                    filter: textFilter()\n                  }\n                ];\n\n                const selectRow = {\n                  mode: \"radio\",\n                  clickToSelect: true,\n                  bgColor: \"#00BFFF\",\n                  onSelect: row => {\n                    const cy = this.cy;\n                    const node = cy.$id(row.id);\n                    const renderedPosition = node.renderedPosition();\n                    const viewportCenterX = cy.width() / 2;\n                    const viewportCenterY = cy.height() / 2;\n                    const relativeRenderedPosition = {\n                      x: viewportCenterX - renderedPosition.x,\n                      y: viewportCenterY - renderedPosition.y\n                    };\n                    const zoomFactor = Math.min(\n                      viewportCenterX / node.width(),\n                      viewportCenterY / node.height()\n                    );\n\n                    if (cy.$(\"node\").length <= 50) {\n                      cy.animate({\n                        panBy: relativeRenderedPosition,\n                        duration: 500\n                      }).delay(100, () => {\n                        cy.animate({\n                          zoom: {\n                            level: zoomFactor,\n                            renderedPosition: {\n                              x: viewportCenterX,\n                              y: viewportCenterY\n                            }\n                          },\n                          duration: 500\n                        });\n                      });\n                    } else {\n                      cy.panBy(relativeRenderedPosition);\n                      cy.zoom({\n                        level: zoomFactor,\n                        renderedPosition: {\n                          x: viewportCenterX,\n                          y: viewportCenterY\n                        }\n                      });\n                    }\n\n                    window.poppers[\"search\"].destroy();\n                    document.getElementById(\"popper-search\").remove();\n                  }\n                };\n\n                const search = document.createElement(\"div\");\n                ReactDOM.render(\n                  <Card>\n                    <CardBody>\n                      <CardTitle\n                        tag=\"h5\"\n                        className=\"mw-100 mb-4\"\n                        style={{ minWidth: \"50vw\" }}\n                      >\n                        Search{\" \"}\n                        <small className=\"text-muted\">(Jump to Body)</small>\n                        <CardLink\n                          href=\"#\"\n                          className=\"btn btn-outline-dark float-right align-bottom ml-1\"\n                          onClick={() => {\n                            window.poppers[\"search\"].destroy();\n                            document.getElementById(\"popper-search\").remove();\n                          }}\n                        >\n                          <X />\n                        </CardLink>\n                      </CardTitle>\n                      <CardText tag=\"div\" className=\"mw-100\">\n                        <BootstrapTable\n                          keyField=\"id\"\n                          data={data}\n                          hover\n                          condensed\n                          selectRow={selectRow}\n                          columns={columns}\n                          filter={filterFactory()}\n                        />\n                      </CardText>\n                    </CardBody>\n                  </Card>,\n                  search\n                );\n\n                document.getElementsByTagName(\"body\")[0].appendChild(search);\n                search.setAttribute(\"id\", \"popper-search\");\n                window.poppers = window.poppers || {};\n                window.poppers[\"search\"] = new PopperCore(\n                  document.getElementById(\"search\"),\n                  search\n                );\n              }}\n            >\n              <Search size={16} /> Search\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n",
    "import React, { Component } from \"react\";\nimport { GitHub } from \"react-feather\";\nimport {\n  Col,\n  Collapse,\n  Container,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink,\n  Row\n} from \"reactstrap\";\nimport Canvas from \"../canvas/Canvas\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Navbar\n          color=\"inverse\"\n          light\n          expand=\"md\"\n          className=\"border-bottom mb-2\"\n        >\n          <NavbarBrand href=\"/\" className=\"text-wrap\">\n            CivicGraph Demo - A DIY Solar System\n            <span\n              className=\"spinner-grow mx-2 text-danger invisible\"\n              role=\"status\"\n              id=\"loading\"\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </span>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  href=\"https://github.com/adityamukho/CivicGraph\"\n                  target=\"_blank\"\n                >\n                  <GitHub />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Canvas />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./index.css\";\nimport \"./lib/polyfills\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}